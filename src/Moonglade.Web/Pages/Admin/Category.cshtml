@page "/admin/category"
@model Moonglade.Web.Pages.Admin.CategoryModel
@{
    ViewBag.Title = "Manage Categories";
}

@section scripts{
    <script>
        var editCanvas = new bootstrap.Offcanvas(document.getElementById('editCatCanvas'));
        var catId = emptyGuid;

        function initCreateCategory() {
            catId = emptyGuid;
            $('#edit-form')[0].reset();
            editCanvas.show();
        }

        function editCat(id) {
            callApi(`/api/category/${id}`, 'GET', {},
                async (resp) => {
                    var data = await resp.json();
                    catId = data.id;
                    $('#EditCategoryRequest_RouteName').val(data.routeName);
                    $('#EditCategoryRequest_DisplayName').val(data.displayName);
                    $('#EditCategoryRequest_Note').val(data.note);
                    editCanvas.show();
                });
        }

        function deleteCat(catid) {
            $(`#span-processing-${catid}`).show();

            callApi(`/api/category/${catid}`, 'DELETE', {},
                (resp) => {
                    $(`#card-${catid}`).hide();
                    blogToast.success('Category deleted');
                });
        }

        $(".btn-delete").click(function () {
            var cfm = confirm("Delete Confirmation?");
            if (cfm) deleteCat($(this).data("catid"));
        });

        $(".btn-edit").click(function () {
            editCat($(this).data("catid"));
        });

        function handleSubmit(event) {
            event.preventDefault();

            if ($("#edit-form").valid()) {
                var apiAddress = '';
                var verb = '';

                if (catId == emptyGuid) {
                    apiAddress = '/api/category';
                    verb = 'POST';
                }
                else {
                    apiAddress = `/api/category/${catId}`;
                    verb = 'PUT';
                }

                const data = new FormData(event.target);
                const value = Object.fromEntries(data.entries());

                callApi(apiAddress, verb,
                    {
                        "RouteName": value["EditCategoryRequest.RouteName"],
                        "DisplayName": value["EditCategoryRequest.DisplayName"],
                        "Note": value["EditCategoryRequest.Note"]
                    },
                    (resp) => {
                        $("#edit-form")[0].reset();
                        $("#editCatModal").modal('hide');
                        window.location.reload();
                    });
            }
        }

        const form = document.querySelector('#edit-form');
        form.addEventListener('submit', handleSubmit);
    </script>
}

<div class="admin-toolbar ps-4 pe-4 pt-2 pb-2 border-bottom mb-3 shadow-sm">
    <a class="btn btn-outline-accent" href="javascript:initCreateCategory();">
        <i class="bi-plus-lg"></i>
        @Localizer["New"]
    </a>
</div>

@Html.AntiForgeryToken()

<div class="row row-cols-1 row-cols-sm-2 row-cols-md-3 row-cols-lg-4 g-4 ps-4 pe-4">
    @foreach (var cat in Model.Categories.OrderBy(m => m.DisplayName))
    {
        <div class="col">
            <div class="card shadow-sm" id="card-@cat.Id">
                <div class="card-body">
                    <h6 class="card-title">
                        <a asp-page="/CategoryList" asp-route-routeName="@cat.RouteName" target="_blank">
                            @cat.DisplayName
                        </a>
                    </h6>

                    <p class="mt-2 h-30px">
                        @cat.Note
                    </p>

                    <small class="text-muted">@cat.RouteName</small>
                </div>
                <div class="card-footer">
                    <a href="javascript:;" data-catid="@cat.Id" class="btn btn-sm btn-outline-accent btn-edit"><i class="bi-pen"></i></a>
                    <a href="javascript:;" data-catid="@cat.Id" class="btn btn-sm btn-outline-danger btn-delete"><i class="bi-trash"></i></a>

                    <span id="span-processing-@cat.Id" class="spinner-border spinner-border-sm" role="status" aria-hidden="true" style="display: none;"></span>
                </div>
            </div>
        </div>
    }
</div>

<div class="offcanvas offcanvas-end" tabindex="-1" id="editCatCanvas" aria-labelledby="editCatCanvasLabel">
    <div class="offcanvas-header">
        <h5 class="offcanvas-title" id="editCatCanvasLabel">@Localizer["Category Information"]</h5>
        <button type="button" class="btn-close text-reset" data-bs-dismiss="offcanvas" aria-label="Close"></button>
    </div>
    <div class="offcanvas-body">
        <form id="edit-form" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="mb-3">
                <label class="form-label" asp-for="EditCategoryRequest.DisplayName"></label>
                <input asp-for="EditCategoryRequest.DisplayName" class="form-control" />
                <span asp-validation-for="EditCategoryRequest.DisplayName" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label class="form-label" asp-for="EditCategoryRequest.RouteName"></label>
                <input asp-for="EditCategoryRequest.RouteName" class="form-control" />
                <span asp-validation-for="EditCategoryRequest.RouteName" class="text-danger"></span>
            </div>
            <div class="mb-3">
                <label class="form-label" asp-for="EditCategoryRequest.Note"></label>
                <input asp-for="EditCategoryRequest.Note" class="form-control" />
                <span asp-validation-for="EditCategoryRequest.Note" class="text-danger"></span>
            </div>
            <div class="mt-3">
                <button type="submit" class="btn btn-success">@Localizer["Submit"]</button>
                <button type="button" class="btn btn-secondary" data-bs-dismiss="offcanvas">@Localizer["Cancel"]</button>
            </div>
        </form>
    </div>
</div>
