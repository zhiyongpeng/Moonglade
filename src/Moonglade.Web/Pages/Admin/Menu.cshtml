@page "/admin/menu"
@model Moonglade.Web.Pages.Admin.MenuModel
@{
    ViewBag.Title = "Manage Menus";
}

@section scripts{
    <script>
        var menuJson = @Html.Raw(Model.MenuItems.ToJson());
        var isNewSubMenu = false;
        var currentSm = {
            Id: emptyGuid,
            Title: '',
            Url: '',
            IsOpenInNewTab: false
        };

        function expandSubMenu(topMenuId, subMenuEditViewModels) {
            var h = '';

            subMenuEditViewModels.forEach(function (sm) {
                h += `<a id="menu-${sm.id}" href="javascript:loadSubMenuEditor('${topMenuId}', '${sm.id}');" class="list-group-item list-group-item-action">${sm.title}</a>`;
            });

            $('.submenu-list').html(h);
        }

        function findTopMenu(topMenuId) {
            var menu = menuJson.filter((m) => {
                return m.Id == topMenuId;
            });

            return menu[0];
        }

        function findSubMenu(father, subMenuId) {
            var subMenu = father.SubMenus.filter((sm) => {
                return sm.Id == subMenuId;
            });

            if (subMenu && subMenu.length > 0) {
                return subMenu[0];
            }
            return null;
        }

        function clearSubMenus() {
            $('.submenu-list').html('');
        }

        function loadMenuEditor(topMenuId) {
            $('.sub-menu-editor').hide();
            $('.btn-create-submenu').show();

            $('.top-menu-list a').removeClass('active');
            $(`#menu-${topMenuId}`).addClass('active');

            callApi(`/api/menu/edit/${topMenuId}`,
                'GET',
                {},
                async (resp) => {
                    var data = await resp.json();
                    $('#topmenu-id').val(data.id);
                    $('#topmenu-title').val(data.title);
                    $('#topmenu-url').val(data.url);
                    $('#topmenu-iconcssclass').val(data.icon);
                    $('#topmenu-displayorder').val(data.displayOrder);
                    if (data.isOpenInNewTab) {
                        $('#topmenu-isopeninnewtab').prop('checked', 'checked');
                    } else {
                        $('#topmenu-isopeninnewtab').prop('checked', null);
                    }

                    $('.btn-delete').show();
                    $('.btn-delete').data('menuid', topMenuId);

                    if (data.subMenus.length > 0) {
                        $('#topmenu-url, #topmenu-iconcssclass').attr('readonly', '');
                        expandSubMenu(topMenuId, data.subMenus);
                    } else {
                        $('#topmenu-url, #topmenu-iconcssclass').attr('readonly', null);
                        clearSubMenus();
                    }
                });
        }

        function loadSubMenuEditor(topMenuId, subMenuId) {
            $('.sub-menu-editor').show();
            $('.btn-delete-submenu').show();
            $('.btn-delete-submenu').data('tmd', topMenuId);
            $('.btn-delete-submenu').data('smd', subMenuId);

            var father = findTopMenu(topMenuId);
            currentSm = findSubMenu(father, subMenuId);

            isNewSubMenu = false;
            $('#submenu-id').val(currentSm.Id);
            $('#submenu-title').val(currentSm.Title);
            $('#submenu-url').val(currentSm.Url);

            if (currentSm.IsOpenInNewTab) {
                $('#submenu-isopeninnewtab').prop('checked', 'checked');
            } else {
                $('#submenu-isopeninnewtab').prop('checked', null);
            }
        }

        $('.btn-delete').click(function() {
            var cfm = confirm("Delete Confirmation?");
            if (cfm) deleteMenu($(this).data("menuid"));
        });

        $('.btn-delete-submenu').click(function () {
            var cfm = confirm("Delete Submenu?");
            if (cfm) {
                var tmd = $(this).data('tmd');
                var smd = $(this).data('smd');

                var father = findTopMenu(tmd);
                var currentSms = father.SubMenus;
                var newSms = currentSms.filter(function (sm) {
                    return sm.Id != smd;
                });

                father.SubMenus = newSms;
                updateMenus();
            }
        });

        function initCreateMenu() {
            $('#topmenu-id').val(emptyGuid);
            document.querySelector('#edit-form').reset();
            $('.btn-delete').hide();

            $('.top-menu-list a').removeClass('active');
            $('.fg-open-in-new-tab').show();
            $('#topmenu-url, #topmenu-iconcssclass').attr('readonly', null);
            clearSubMenus();
        }

        function initCreateSubMenu() {
            isNewSubMenu = true;
            $('.sub-menu-editor').show();
            $('#submenu-id').val(emptyGuid);
            $('#submenu-title').val('');
            $('#submenu-url').val('');
            $('#submenu-isopeninnewtab').prop('checked', null);
        }

        function deleteMenu(menuid) {
            callApi(`/api/menu/${menuid}`,
                'DELETE',
                {},
                (resp) => {
                    initCreateMenu();
                    $(`#menu-${menuid}`).hide();
                });
        }

        $(".btn-submit").click(function() {
            updateMenus();
        });

        function updateMenus() {
            if ($("#edit-form").valid()) {
                var action = '';
                var httpVerb = 'POST';
                var menuId = $("#topmenu-id").val();
                if (menuId == emptyGuid) {
                    action = '/api/menu';
                } else {
                    action = '/api/menu/edit';
                    httpVerb = 'PUT';
                }

                var father = findTopMenu(menuId);
                if (!isNewSubMenu) {
                    currentSm.Id = $('#submenu-id').val();
                    currentSm.Title = $('#submenu-title').val();
                    currentSm.Url = $('#submenu-url').val();
                    currentSm.IsOpenInNewTab = $('#submenu-isopeninnewtab').prop('checked');
                } else {
                    var newSm = {
                        Id: $('#submenu-id').val(),
                        Title: $('#submenu-title').val(),
                        Url: $('#submenu-url').val(),
                        IsOpenInNewTab: $('#submenu-isopeninnewtab').prop('checked')
                    };
                    father.SubMenus.push(newSm);
                }

                callApi(`${action}`,
                    httpVerb,
                    {
                        "Id": $("#topmenu-id").val(),
                        "Title": $("#topmenu-title").val(),
                        "Url": $("#topmenu-url").val(),
                        "Icon": $("#topmenu-iconcssclass").val(),
                        "DisplayOrder": parseInt($("#topmenu-displayorder").val()),
                        "IsOpenInNewTab": $('#topmenu-isopeninnewtab').prop('checked'),
                        "SubMenus": father ? father.SubMenus : null
                    },
                    (resp) => {
                        document.querySelector('#edit-form').reset();

                        blogToast.success('Menu updated');
                        setTimeout(function () {
                            window.location.reload();
                        }, 800);
                    });
            }
        }

        $(function() {
            initCreateMenu();
        });
    </script>
}

<div class="p-4">

    @if (Model.MenuItems.Count == 0)
    {
        <div class="alert alert-info">@Localizer["No Customized Menus"]</div>
    }

    <div class="row">
        <div class="col-3">
            <h5>@Localizer["Top Level"]</h5>
            <hr />
            <div class="list-group top-menu-list mb-2">
                @foreach (var menu in Model.MenuItems.OrderBy(m => m.DisplayOrder))
                {
                    @if (menu.SubMenus.Count > 0)
                    {
                        <a id="menu-@menu.Id" class="list-group-item list-group-item-action"
                           href="javascript:loadMenuEditor('@menu.Id');">
                            <i class="bi-menu-app me-2"></i>
                            @menu.Title

                            <span class="text-muted float-end">
                                ...
                            </span>
                        </a>
                    }
                    else
                    {
                        <a id="menu-@menu.Id" class="list-group-item list-group-item-action"
                           href="javascript:loadMenuEditor('@menu.Id');">
                            <i class="@menu.Icon me-2"></i>
                            @menu.Title
                        </a>
                    }
                }
            </div>
            <a class="btn btn-outline-accent w-100" href="javascript:initCreateMenu();">
                <i class="bi-plus-lg"></i>
                @Localizer["New"]
            </a>
        </div>
        <div class="col-3">
            <h5>@Localizer["Sub Menu"]</h5>
            <hr />
            <div class="list-group submenu-list mb-2">

            </div>
            <a class="btn btn-outline-accent w-100 btn-create-submenu" style="display: none;" href="javascript:initCreateSubMenu();">
                <i class="bi-plus-circle"></i>
                @Localizer["New"]
            </a>
        </div>
        <div class="col-6">
            <h5>@Localizer["Menu Editor"]</h5>
            <hr />
            <div class="top-menu-editor">
                <form id="edit-form" method="post">
                    <h6>@Localizer["Top Menu Properties"]</h6>
                    <hr />
                    <input type="hidden" id="topmenu-id" />

                    <div class="row">
                        <div class="col-6">
                            <div class="mb-2">
                                <input id="topmenu-title" placeholder="@Localizer["Title"]" class="form-control" max-length="64" required />
                            </div>
                        </div>
                        <div class="col-4">
                            <div class="mb-2">
                                <input id="topmenu-iconcssclass" placeholder="@Localizer["Icon CSS Class"]" class="form-control" pattern="[a-z0-9-]+" />

                            </div>
                        </div>
                        <div class="col-2">
                            <a class="btn btn-outline-secondary w-100" href="https://icons.getbootstrap.com/" target="_blank">All Icons</a>
                        </div>
                    </div>

                    <div class="mb-2">
                        <input id="topmenu-url" placeholder="@Localizer["Url (Relative or Absolute)"]" class="form-control" max-length="256" required />
                    </div>

                    <div class="mb-2">
                        <div class="input-group">
                            <span class="input-group-text">Order</span>
                            <input id="topmenu-displayorder" class="form-control" />
                        </div>
                    </div>
                    <div class="mb-2">
                        <div class="form-check">
                            <input id="topmenu-isopeninnewtab" class="form-check-input" type="checkbox">
                            <label for="topmenu-isopeninnewtab" class="form-check-label">@Localizer["Open in New Tab"]</label>
                        </div>
                    </div>

                    <div class="sub-menu-editor" style="display: none;">
                        <h6>@Localizer["Sub Menu Properties"]</h6>
                        <hr />
                        <input type="hidden" id="submenu-id" />
                        <div class="row">
                            <div class="col-10">
                                <div class="mb-2">
                                    <input id="submenu-title" placeholder="@Localizer["Title"]" class="form-control" max-length="64" required />
                                </div>
                                <div class="mb-2">
                                    <input id="submenu-url" placeholder="@Localizer["Url (Relative or Absolute)"]" class="form-control" max-length="256" required />
                                </div>
                            </div>
                            <div class="col-2">
                                <a href="javascript:;" data-tmd="" data-smd="" class="btn w-100 btn-outline-danger btn-delete-submenu" style="display: none;"><i class="bi-trash"></i></a>
                            </div>
                        </div>

                        <div class="mb-2">
                            <div class="form-check">
                                <input id="submenu-isopeninnewtab" class="form-check-input" type="checkbox">
                                <label for="submenu-isopeninnewtab" class="form-check-label">@Localizer["Open in New Tab"]</label>
                            </div>
                        </div>
                    </div>

                    <hr />
                    <button type="button" class="btn btn-outline-accent btn-submit">@Localizer["Submit"]</button>
                    <button type="button" class="btn btn-outline-secondary">@Localizer["Cancel"]</button>

                    <a href="javascript:;" data-menuid="" class="btn btn-outline-danger btn-delete" style="display: none;"><i class="bi-trash"></i></a>
                </form>
            </div>
        </div>
    </div>

    <div class="small text-muted">
        * @Localizer["To turn on / off system navigation items (Categories / Tags / Archive), edit"] <code>appsettings.json</code> @Localizer["or override with environment variables."]
    </div>
</div>
